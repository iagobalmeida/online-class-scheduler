{"ast":null,"code":"import connect from '../../utils/database';\nexport default (async (req, res) => {\n  // Se a requisição é do tipo POST\n  if (req.method === 'POST') {\n    const {\n      name,\n      email,\n      cellphone,\n      isTeacher\n    } = req.body;\n\n    if (!name || !email || !cellphone || isTeacher == undefined) {\n      res.status(400).json({\n        error: 'Missing body parameter'\n      });\n      return;\n    } // Conecta-se ao banco de dados\n\n\n    const {\n      db\n    } = await connect(); // Executa inserção na collection \"users\"\n\n    const response = await db.collection('users').insertOne({\n      name,\n      email,\n      cellphone,\n      isTeacher,\n      courses: [],\n      avaliable_hours: []\n    }); // Retorna na respose o JSON do response\n\n    res.status(200).json(response.ops[0]); // Se a requisição não for do tipo POST\n  } else {\n    // Retorna na respose a message\n    res.status(400).json({\n      error: 'Wrong requisition method'\n    });\n  }\n});","map":{"version":3,"sources":["/home/iago/Documentos/ProjetosNextJS/online-class-scheduler/pages/api/user.tsx"],"names":["connect","req","res","method","name","email","cellphone","isTeacher","body","undefined","status","json","error","db","response","collection","insertOne","courses","avaliable_hours","ops"],"mappings":"AAEA,OAAOA,OAAP,MAAoB,sBAApB;AAcA,gBAAe,OACXC,GADW,EAEXC,GAFW,KAGI;AAEf;AACA,MAAKD,GAAG,CAACE,MAAJ,KAAe,MAApB,EAA4B;AAExB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA;AAA1B,QAAwCN,GAAG,CAACO,IAAlD;;AAEA,QAAG,CAACJ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,SAApB,IAAkCC,SAAS,IAAIE,SAAlD,EAA6D;AACzDP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAC;AAAR,OAArB;AACA;AACH,KAPuB,CASxB;;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,MAAMb,OAAO,EAA5B,CAVwB,CAWxB;;AACA,UAAMc,QAAQ,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,SAAvB,CAAiC;AACpDZ,MAAAA,IADoD;AAEpDC,MAAAA,KAFoD;AAGpDC,MAAAA,SAHoD;AAIpDC,MAAAA,SAJoD;AAKpDU,MAAAA,OAAO,EAAE,EAL2C;AAMpDC,MAAAA,eAAe,EAAE;AANmC,KAAjC,CAAvB,CAZwB,CAoBxB;;AACAhB,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,QAAQ,CAACK,GAAT,CAAa,CAAb,CAArB,EArBwB,CAuB5B;AACC,GAxBD,MAwBK;AACD;AACAjB,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB;AACH;AACJ,CAlCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport { isUndefined } from 'node:util';\nimport connect from '../../utils/database'\n\ninterface ErrorResponseType {\n    error: string\n}\n\ninterface SucessResponseType {\n    _id:        string,\n    name:       string,\n    cellphone:  string,\n    isTeacher:  boolean\n\n}\n\nexport default async(\n    req: NextApiRequest, \n    res: NextApiResponse<ErrorResponseType | SucessResponseType>\n):Promise<void> => {\n\n    // Se a requisição é do tipo POST\n    if ( req.method === 'POST' ){\n\n        const { name, email, cellphone, isTeacher } = req.body;\n\n        if(!name || !email || !cellphone || (isTeacher == undefined)){\n            res.status(400).json({ error:'Missing body parameter'});\n            return;\n        }\n\n        // Conecta-se ao banco de dados\n        const { db } = await connect();\n        // Executa inserção na collection \"users\"\n        const response = await db.collection('users').insertOne({\n            name,\n            email,\n            cellphone,\n            isTeacher,\n            courses: [],\n            avaliable_hours: []\n        });\n        // Retorna na respose o JSON do response\n        res.status(200).json(response.ops[0]);\n\n    // Se a requisição não for do tipo POST\n    }else{\n        // Retorna na respose a message\n        res.status(400).json({ error: 'Wrong requisition method' });\n    }\n}"]},"metadata":{},"sourceType":"module"}